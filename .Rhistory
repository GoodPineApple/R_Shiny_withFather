source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(shiny)
library(flexdashboard)
library(leaflet)
ui <- pageWithSidebar(
headerPanel(
flowLayout(
"1","2","3","4"
)
),
mainPanel(
"main panel",
leafletOutput("theMap")
),
# mainPanel(
# tabsetPanel(
#   tabPanel("Plot", plotOutput("plot")),
#   tabPanel("Summary", verbatimTextOutput("summary")),
#   tabPanel("Table", tableOutput("table"))
# )
#sidebarPanel(
navlistPanel(
tabPanel("a",NULL),
tabPanel("a",NULL),
tabPanel("a",NULL)
)
#)
)
knitr::opts_chunk$set(echo = TRUE)
library(shiny)
library(flexdashboard)
library(leaflet)
df<-read.csv('cctv_clean.csv',header = T)
View(df)
ui <- pageWithSidebar(
headerPanel(
flowLayout(
"1","2","3","4"
)
),
mainPanel(
"main panel",
leafletOutput("theMap")
),
# mainPanel(
# tabsetPanel(
#   tabPanel("Plot", plotOutput("plot")),
#   tabPanel("Summary", verbatimTextOutput("summary")),
#   tabPanel("Table", tableOutput("table"))
# )
#sidebarPanel(
navlistPanel(
tabPanel("a",NULL),
tabPanel("a",NULL),
tabPanel("a",NULL)
)
#)
)
server <- function(input, output){
points <- eventReactive(input$recalc, {
cbind(rnorm(40) * 2 + 13, rnorm(40) + 48)
}, ignoreNULL = FALSE)
#df = data.frame(Lat = 1:10, Long = rnorm(10))
output$theMap <- renderLeaflet({
leaflet(options = leafletOptions(
#maxZoom=12
# ,attributionControl = T
# ,zoomControl = F1
)) %>%
addProviderTiles(providers$OpenStreetMap.Mapnik,
options = providerTileOptions(noWrap = TRUE)
) %>%
#addMarkers(data = cbind(127.38, 36.35))
#addMarkers(lng=127.38, lat=36.35)
addCircles(data=df, radius=10, lng=~LNG, lat=~LAT)
})
}
shinyApp(ui=ui, server=server)
