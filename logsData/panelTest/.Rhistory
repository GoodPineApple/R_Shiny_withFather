#df = data.frame(Lat = 1:10, Long = rnorm(10))
output$theMap <- renderLeaflet({
leaflet(options = leafletOptions(
#maxZoom=12
# ,attributionControl = T
# ,zoomControl = F1
)) %>%
addProviderTiles(providers$OpenStreetMap.Mapnik,
options = providerTileOptions(noWrap = TRUE)
) %>%
addCircles(data=df, radius=10, lng=~LNG, lat=~LAT) %>%
addMarkers(lng=~LNG, lat=~LAT)
})
}
shinyApp(ui=ui, server=server)
knitr::opts_chunk$set(echo = TRUE)
library(shiny)
library(flexdashboard)
library(leaflet)
# View(df)
ui <- pageWithSidebar(
headerPanel(
flowLayout(
"1첫번째","두번째","세번째","네번째"
)
),
mainPanel(
"메인",
leafletOutput("theMap")
),
# mainPanel(
# tabsetPanel(
#   tabPanel("Plot", plotOutput("plot")),
#   tabPanel("Summary", verbatimTextOutput("summary")),
#   tabPanel("Table", tableOutput("table"))
# )
#sidebarPanel(
navlistPanel(
tabPanel("일",NULL),
tabPanel("이",NULL),
tabPanel("삼",NULL)
)
#)
)
# server
####################################
# 변수선언
resPath = "resources/"
cctvDataNm = "cctv_clean.csv"
tashuDataNm = "tashu_station.csv"
# 기본타입색 1:CCTV 2:TASHU
rootTypeColors <- c("1"="#595490", "2"="#527525")
# CCTV 위치정보조회
getLocationCCTV <- function(){
path <- paste0(resPath,cctvDataNm)
read.csv(path,header = T)
}
# TASHU 위치정보조회
getLocationTASHU <- function(){
path <- paste0(resPath,tashuDataNm)
read.csv(path,header = T)
}
server <- function(input, output){
points <- eventReactive(input$recalc, {
cbind(rnorm(40) * 2 + 13, rnorm(40) + 48)
}, ignoreNULL = FALSE)
cctv <- getLocationCCTV()
tashu <- getLocationTASHU()
#df = data.frame(Lat = 1:10, Long = rnorm(10))
output$theMap <- renderLeaflet({
leaflet(options = leafletOptions(
#maxZoom=12
# ,attributionControl = T
# ,zoomControl = F1
)) %>%
addProviderTiles(providers$OpenStreetMap.Mapnik,
options = providerTileOptions(noWrap = TRUE)
) %>%
#addMarkers(data = cbind(127.38, 36.35))
#addMarkers(lng=127.38, lat=36.35)
addCircles(
data=cctv, radius=5, lng=~LNG, lat=~LAT
) %>%
addMarkers(
data=tashu, radius=5, lng=~LNG, lat=~LAT
)
})
}
shinyApp(ui=ui, server=server)
knitr::opts_chunk$set(echo = TRUE)
library(shiny)
library(flexdashboard)
library(leaflet)
# View(df)
ui <- pageWithSidebar(
headerPanel(
flowLayout(
"1첫번째","두번째","세번째","네번째"
)
),
mainPanel(
"메인",
leafletOutput("theMap")
),
# mainPanel(
# tabsetPanel(
#   tabPanel("Plot", plotOutput("plot")),
#   tabPanel("Summary", verbatimTextOutput("summary")),
#   tabPanel("Table", tableOutput("table"))
# )
#sidebarPanel(
navlistPanel(
tabPanel("일",NULL),
tabPanel("이",NULL),
tabPanel("삼",NULL)
)
#)
)
# server
####################################
# 변수선언
resPath = "resources/"
cctvDataNm = "cctv_clean.csv"
tashuDataNm = "tashu_station.csv"
# 기본타입색 1:CCTV 2:TASHU
rootTypeColors <- c("1"="#595490", "2"="#527525")
# CCTV 위치정보조회
getLocationCCTV <- function(){
path <- paste0(resPath,cctvDataNm)
read.csv(path,header = T)
}
# TASHU 위치정보조회
getLocationTASHU <- function(){
path <- paste0(resPath,tashuDataNm)
read.csv(path,header = T)
}
server <- function(input, output){
points <- eventReactive(input$recalc, {
cbind(rnorm(40) * 2 + 13, rnorm(40) + 48)
}, ignoreNULL = FALSE)
cctv <- getLocationCCTV()
tashu <- getLocationTASHU()
#df = data.frame(Lat = 1:10, Long = rnorm(10))
output$theMap <- renderLeaflet({
leaflet(options = leafletOptions(
#maxZoom=12
# ,attributionControl = T
# ,zoomControl = F1
)) %>%
addProviderTiles(providers$OpenStreetMap.Mapnik,
options = providerTileOptions(noWrap = TRUE)
) %>%
#addMarkers(data = cbind(127.38, 36.35))
#addMarkers(lng=127.38, lat=36.35)
addCircles(
data=cctv, radius=5, lng=~LNG, lat=~LAT
)
})
}
shinyApp(ui=ui, server=server)
knitr::opts_chunk$set(echo = TRUE)
library(shiny)
library(flexdashboard)
library(leaflet)
# View(df)
ui <- pageWithSidebar(
headerPanel(
flowLayout(
"1첫번째","두번째","세번째","네번째"
)
),
mainPanel(
"메인",
leafletOutput("theMap")
),
# mainPanel(
# tabsetPanel(
#   tabPanel("Plot", plotOutput("plot")),
#   tabPanel("Summary", verbatimTextOutput("summary")),
#   tabPanel("Table", tableOutput("table"))
# )
#sidebarPanel(
navlistPanel(
tabPanel("일",NULL),
tabPanel("이",NULL),
tabPanel("삼",NULL)
)
#)
)
# server
####################################
# 변수선언
resPath = "resources/"
cctvDataNm = "cctv_clean.csv"
tashuDataNm = "tashu_station.csv"
# 기본타입색 1:CCTV 2:TASHU
rootTypeColors <- c("1"="#595490", "2"="#527525")
# CCTV 위치정보조회
getLocationCCTV <- function(){
path <- paste0(resPath,cctvDataNm)
read.csv(path,header = T)
}
# TASHU 위치정보조회
getLocationTASHU <- function(){
path <- paste0(resPath,tashuDataNm)
read.csv(path,header = T)
}
server <- function(input, output){
points <- eventReactive(input$recalc, {
cbind(rnorm(40) * 2 + 13, rnorm(40) + 48)
}, ignoreNULL = FALSE)
cctv <- getLocationCCTV()
#df = data.frame(Lat = 1:10, Long = rnorm(10))
output$theMap <- renderLeaflet({
leaflet(options = leafletOptions(
#maxZoom=12
# ,attributionControl = T
# ,zoomControl = F1
)) %>%
addProviderTiles(providers$OpenStreetMap.Mapnik,
options = providerTileOptions(noWrap = TRUE)
) %>%
#addMarkers(data = cbind(127.38, 36.35))
#addMarkers(lng=127.38, lat=36.35)
addCircles(
data=cctv, radius=5, lng=~LNG, lat=~LAT
)
})
}
shinyApp(ui=ui, server=server)
knitr::opts_chunk$set(echo = TRUE)
library(shiny)
library(flexdashboard)
library(leaflet)
# View(df)
ui <- pageWithSidebar(
headerPanel(
flowLayout(
"1첫번째","두번째","세번째","네번째"
)
),
mainPanel(
"메인",
leafletOutput("theMap")
),
# mainPanel(
# tabsetPanel(
#   tabPanel("Plot", plotOutput("plot")),
#   tabPanel("Summary", verbatimTextOutput("summary")),
#   tabPanel("Table", tableOutput("table"))
# )
#sidebarPanel(
navlistPanel(
tabPanel("일",NULL),
tabPanel("이",NULL),
tabPanel("삼",NULL)
)
#)
)
# server
####################################
# 변수선언
resPath = "resources/"
cctvDataNm = "cctv_clean.csv"
tashuDataNm = "tashu_station.csv"
# 기본타입색 1:CCTV 2:TASHU
rootTypeColors <- c("1"="#595490", "2"="#527525")
# CCTV 위치정보조회
getLocationCCTV <- function(){
path <- paste0(resPath,cctvDataNm)
read.csv(path,header = T)
}
# TASHU 위치정보조회
getLocationTASHU <- function(){
path <- paste0(resPath,tashuDataNm)
read.csv(path,header = T)
}
server <- function(input, output){
points <- eventReactive(input$recalc, {
cbind(rnorm(40) * 2 + 13, rnorm(40) + 48)
}, ignoreNULL = FALSE)
cctv <- getLocationCCTV()
#df = data.frame(Lat = 1:10, Long = rnorm(10))
output$theMap <- renderLeaflet({
leaflet(options = leafletOptions(
#maxZoom=12
# ,attributionControl = T
# ,zoomControl = F1
)) %>%
addProviderTiles(providers$OpenStreetMap.Mapnik,
options = providerTileOptions(noWrap = TRUE)
) %>%
#addMarkers(data = cbind(127.38, 36.35))
#addMarkers(lng=127.38, lat=36.35)
addCircles(
data=cctv, radius=5, lng=~LNG, lat=~LAT
)
})
}
shinyApp(ui=ui, server=server)
install.packages('rsconnect')
knitr::opts_chunk$set(echo = TRUE)
library(shiny)
library(flexdashboard)
library(leaflet)
# View(df)
ui <- pageWithSidebar(
headerPanel(
flowLayout(
"1첫번째","두번째","세번째","네번째"
)
),
mainPanel(
"메인",
leafletOutput("theMap")
),
# mainPanel(
# tabsetPanel(
#   tabPanel("Plot", plotOutput("plot")),
#   tabPanel("Summary", verbatimTextOutput("summary")),
#   tabPanel("Table", tableOutput("table"))
# )
#sidebarPanel(
navlistPanel(
tabPanel("일",NULL),
tabPanel("이",NULL),
tabPanel("삼",NULL)
)
#)
)
# server
####################################
# 변수선언
resPath = "resources/"
cctvDataNm = "cctv_clean.csv"
tashuDataNm = "tashu_station.csv"
# 기본타입색 1:CCTV 2:TASHU
rootTypeColors <- c("1"="#595490", "2"="#527525")
# CCTV 위치정보조회
getLocationCCTV <- function(){
path <- paste0(resPath,cctvDataNm)
read.csv(path,header = T)
}
# TASHU 위치정보조회
getLocationTASHU <- function(){
path <- paste0(resPath,tashuDataNm)
read.csv(path,header = T)
}
server <- function(input, output){
points <- eventReactive(input$recalc, {
cbind(rnorm(40) * 2 + 13, rnorm(40) + 48)
}, ignoreNULL = FALSE)
cctv <- getLocationCCTV()
#df = data.frame(Lat = 1:10, Long = rnorm(10))
output$theMap <- renderLeaflet({
leaflet(options = leafletOptions(
#maxZoom=12
# ,attributionControl = T
# ,zoomControl = F1
)) %>%
addProviderTiles(providers$OpenStreetMap.Mapnik,
options = providerTileOptions(noWrap = TRUE)
) %>%
#addMarkers(data = cbind(127.38, 36.35))
#addMarkers(lng=127.38, lat=36.35)
addCircles(
data=cctv, radius=5, lng=~LNG, lat=~LAT
)
})
}
shinyApp(ui=ui, server=server)
View(getLocationTASHU)
knitr::opts_chunk$set(echo = TRUE)
library(shiny)
library(flexdashboard)
library(leaflet)
# View(df)
ui <- pageWithSidebar(
headerPanel(
flowLayout(
"1첫번째","두번째","세번째","네번째"
)
),
mainPanel(
"메인",
leafletOutput("theMap")
),
# mainPanel(
# tabsetPanel(
#   tabPanel("Plot", plotOutput("plot")),
#   tabPanel("Summary", verbatimTextOutput("summary")),
#   tabPanel("Table", tableOutput("table"))
# )
#sidebarPanel(
navlistPanel(
tabPanel("일",NULL),
tabPanel("이",NULL),
tabPanel("삼",NULL)
)
#)
)
# server
####################################
# 변수선언
resPath = "resources/"
cctvDataNm = "cctv_clean.csv"
tashuDataNm = "tashu_station.csv"
# 기본타입색 1:CCTV 2:TASHU
rootTypeColors <- c("1"="#595490", "2"="#527525")
# CCTV 위치정보조회
getLocationCCTV <- function(){
path <- paste0(resPath,cctvDataNm)
read.csv(path,header = T)
}
# TASHU 위치정보조회
getLocationTASHU <- function(){
path <- paste0(resPath,tashuDataNm)
read.csv(path,header = T)
}
server <- function(input, output){
points <- eventReactive(input$recalc, {
cbind(rnorm(40) * 2 + 13, rnorm(40) + 48)
}, ignoreNULL = FALSE)
cctv <- getLocationCCTV()
#df = data.frame(Lat = 1:10, Long = rnorm(10))
output$theMap <- renderLeaflet({
leaflet(options = leafletOptions(
#maxZoom=12
# ,attributionControl = T
# ,zoomControl = F1
)) %>%
addProviderTiles(providers$OpenStreetMap.Mapnik,
options = providerTileOptions(noWrap = TRUE)
) %>%
#addMarkers(data = cbind(127.38, 36.35))
#addMarkers(lng=127.38, lat=36.35)
addCircles(
data=cctv, radius=10, lng=~LNG, lat=~LAT
)
})
}
shinyApp(ui=ui, server=server)
knitr::opts_chunk$set(echo = TRUE)
library(shiny)
library(flexdashboard)
library(leaflet)
# View(df)
ui <- pageWithSidebar(
headerPanel(
flowLayout(
"1첫번째","두번째","세번째","네번째"
)
),
mainPanel(
"메인",
leafletOutput("theMap")
),
# mainPanel(
# tabsetPanel(
#   tabPanel("Plot", plotOutput("plot")),
#   tabPanel("Summary", verbatimTextOutput("summary")),
#   tabPanel("Table", tableOutput("table"))
# )
#sidebarPanel(
navlistPanel(
tabPanel("일",NULL),
tabPanel("이",NULL),
tabPanel("삼",NULL)
)
#)
)
# server
####################################
# 변수선언
resPath = "resources/"
cctvDataNm = "cctv_clean.csv"
tashuDataNm = "tashu_station.csv"
# 기본타입색 1:CCTV 2:TASHU
rootTypeColors <- c("1"="#595490", "2"="#527525")
# CCTV 위치정보조회
getLocationCCTV <- function(){
path <- paste0(resPath,cctvDataNm)
read.csv(path,header = T)
}
# TASHU 위치정보조회
getLocationTASHU <- function(){
path <- paste0(resPath,tashuDataNm)
read.csv(path,header = T)
}
server <- function(input, output){
points <- eventReactive(input$recalc, {
cbind(rnorm(40) * 2 + 13, rnorm(40) + 48)
}, ignoreNULL = FALSE)
cctv <- getLocationCCTV()
#df = data.frame(Lat = 1:10, Long = rnorm(10))
output$theMap <- renderLeaflet({
leaflet(options = leafletOptions(
#maxZoom=12
# ,attributionControl = T
# ,zoomControl = F1
)) %>%
addProviderTiles(providers$OpenStreetMap.Mapnik,
options = providerTileOptions(noWrap = TRUE)
) %>%
#addMarkers(data = cbind(127.38, 36.35))
#addMarkers(lng=127.38, lat=36.35)
addCircles(
data=cctv, radius=10, lng=~LNG, lat=~LAT
)
})
}
shinyApp(ui=ui, server=server)
